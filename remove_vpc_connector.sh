#!/bin/bash
# ÁßªÈô§VPC ConnectorÈÖçÁΩÆËÑöÊú¨
# ËÆ©Cloud RunÁõ¥Êé•Ëµ∞ÂÖ¨ÁΩëËÆøÈóÆÂ§ñÈÉ®APIÔºåÈÅøÂÖç‰∏çÂøÖË¶ÅÁöÑVPC ConnectorÂª∂Ëøü

set -e

# ÈÖçÁΩÆÂèÇÊï∞
PROJECT_ID="solar-idea-463423-h8"
REGION="asia-southeast1"  # Êñ∞Âä†Âù°
SERVICES=("reporter-agent" "bytec-public-postback")

echo "üåê ÁßªÈô§VPC ConnectorÈÖçÁΩÆ"
echo "================================================"
echo "üìã È°πÁõÆID: $PROJECT_ID"
echo "üåç Âå∫Âüü: $REGION (Êñ∞Âä†Âù°)"
echo "üéØ ÁõÆÊ†á: ËÆ©Cloud RunÁõ¥Êé•Ëµ∞ÂÖ¨ÁΩëËÆøÈóÆÂ§ñÈÉ®API"
echo "üìÖ Êìç‰ΩúÊó∂Èó¥: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
echo "================================================"

# Ê£ÄÊü•gcloudÊòØÂê¶Â∑≤ÂÆâË£ÖÂíåËÆ§ËØÅ
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå gcloud CLI Êú™ÂÆâË£Ö"
    echo "ËØ∑ËÆøÈóÆ https://cloud.google.com/sdk/docs/install ÂÆâË£Ö Google Cloud SDK"
    exit 1
fi
echo "‚úÖ gcloud CLI Â∑≤ÂÆâË£Ö"

# Ê£ÄÊü•ËÆ§ËØÅÁä∂ÊÄÅ
if ! gcloud auth list --filter=status:ACTIVE --format="value(account)" > /dev/null 2>&1; then
    echo "‚ùå ËØ∑ÂÖàËøõË°å GCP ËÆ§ËØÅ: gcloud auth login"
    exit 1
fi
echo "‚úÖ GCP ËÆ§ËØÅÊ≠£Â∏∏"

# ËÆæÁΩÆÈ°πÁõÆ
echo "üîß ËÆæÁΩÆÈ°πÁõÆ..."
gcloud config set project $PROJECT_ID

# ÂàÜÊûêÂΩìÂâçÊúçÂä°ËÆøÈóÆÁöÑAPIÁ±ªÂûã
echo ""
echo "üìä WeeklyReporter ËÆøÈóÆÁöÑAPIÂàÜÊûê:"
echo "   ‚Ä¢ Involve Asia API - Â§ñÈÉ®ÂÖ¨ÂÖ±API"
echo "   ‚Ä¢ È£û‰π¶ API - Â§ñÈÉ®ÂÖ¨ÂÖ±API"
echo "   ‚Ä¢ SMTPÈÇÆ‰ª∂ÊúçÂä° - Â§ñÈÉ®ÂÖ¨ÂÖ±ÊúçÂä°"
echo "   ‚Ä¢ ÁªìËÆ∫: ÂÖ®ÈÉ®‰∏∫Â§ñÈÉ®APIÔºåÊó†ÈúÄVPC Connector"
echo ""

# 1. Ê£ÄÊü•ÂΩìÂâçVPC ConnectorÈÖçÁΩÆ
echo "1. Ê£ÄÊü•ÂΩìÂâçVPC ConnectorÈÖçÁΩÆ..."

for SERVICE in "${SERVICES[@]}"; do
    echo ""
    echo "üîç Ê£ÄÊü•ÊúçÂä°: $SERVICE"
    
    # Ëé∑ÂèñÂΩìÂâçÊúçÂä°ÈÖçÁΩÆ
    CURRENT_VPC=$(gcloud run services describe $SERVICE --region $REGION --format="value(spec.template.spec.template.spec.vpcAccess.connector)" 2>/dev/null || echo "")
    
    if [ -n "$CURRENT_VPC" ]; then
        echo "   üîó ÂΩìÂâçVPC Connector: $CURRENT_VPC"
    else
        echo "   ‚úÖ ÂΩìÂâçÊú™ÈÖçÁΩÆVPC Connector"
    fi
done

# 2. ÁßªÈô§VPC ConnectorÈÖçÁΩÆ
echo ""
echo "2. ÁßªÈô§VPC ConnectorÈÖçÁΩÆ..."

for SERVICE in "${SERVICES[@]}"; do
    echo ""
    echo "üöÄ Êõ¥Êñ∞ÊúçÂä°: $SERVICE"
    
    # Ëé∑ÂèñÂΩìÂâçÊúçÂä°ÈÖçÁΩÆ
    CURRENT_VPC=$(gcloud run services describe $SERVICE --region $REGION --format="value(spec.template.spec.template.spec.vpcAccess.connector)" 2>/dev/null || echo "")
    
    if [ -n "$CURRENT_VPC" ]; then
        echo "   üîß ÁßªÈô§VPC Connector: $CURRENT_VPC"
        
        # ÁßªÈô§VPC ConnectorÈÖçÁΩÆ
        gcloud run services update $SERVICE \
            --region $REGION \
            --no-vpc-connector \
            --quiet
            
        echo "   ‚úÖ Â∑≤ÁßªÈô§VPC ConnectorÈÖçÁΩÆ"
    else
        echo "   ‚úÖ ÊúçÂä°Êú™ÈÖçÁΩÆVPC ConnectorÔºåÊó†ÈúÄ‰øÆÊîπ"
    fi
done

# 3. È™åËØÅÈÖçÁΩÆÊõ¥Êîπ
echo ""
echo "3. È™åËØÅÈÖçÁΩÆÊõ¥Êîπ..."

for SERVICE in "${SERVICES[@]}"; do
    echo ""
    echo "üîç È™åËØÅÊúçÂä°: $SERVICE"
    
    # Ëé∑ÂèñÊõ¥Êñ∞ÂêéÁöÑÊúçÂä°ÈÖçÁΩÆ
    UPDATED_VPC=$(gcloud run services describe $SERVICE --region $REGION --format="value(spec.template.spec.template.spec.vpcAccess.connector)" 2>/dev/null || echo "")
    
    if [ -z "$UPDATED_VPC" ]; then
        echo "   ‚úÖ Á°ÆËÆ§: Â∑≤ÁßªÈô§VPC ConnectorÔºå‰ΩøÁî®ÂÖ¨ÁΩëËÆøÈóÆ"
    else
        echo "   ‚ùå Ë≠¶Âëä: ‰ªçÁÑ∂ÈÖçÁΩÆ‰∫ÜVPC Connector: $UPDATED_VPC"
    fi
    
    # Ëé∑ÂèñÊúçÂä°URLÂπ∂ÊµãËØï
    SERVICE_URL=$(gcloud run services describe $SERVICE --region $REGION --format="value(status.url)" 2>/dev/null || echo "")
    
    if [ -n "$SERVICE_URL" ]; then
        echo "   üì° ÊúçÂä°URL: $SERVICE_URL"
        
        # ÊµãËØïÂÅ•Â∫∑Ê£ÄÊü•
        echo "   üè• ÊµãËØïÂÅ•Â∫∑Ê£ÄÊü•..."
        if curl -f -s "$SERVICE_URL/health" > /dev/null; then
            echo "   ‚úÖ ÂÅ•Â∫∑Ê£ÄÊü•ÈÄöËøá"
        else
            echo "   ‚ùå ÂÅ•Â∫∑Ê£ÄÊü•Â§±Ë¥•"
        fi
        
        # Á≠âÂæÖÊúçÂä°Á®≥ÂÆö
        sleep 3
    else
        echo "   ‚ùå Êó†Ê≥ïËé∑ÂèñÊúçÂä°URL"
    fi
done

# 4. ÁΩëÁªúÊÄßËÉΩÊµãËØï
echo ""
echo "4. ÁΩëÁªúÊÄßËÉΩÊµãËØï..."

# ÊµãËØïÂ§ñÈÉ®APIËÆøÈóÆÊÄßËÉΩ
echo "   üåê ÊµãËØïÂ§ñÈÉ®APIËÆøÈóÆÊÄßËÉΩ..."

# ÊµãËØïInvolve Asia APIÂüüÂêçËß£Êûê
echo "   üì° ÊµãËØïÂüüÂêçËß£Êûê..."
if command -v dig &> /dev/null; then
    dig api.involve.asia +short | head -n 1
else
    echo "   ‚ö†Ô∏è  digÂëΩ‰ª§‰∏çÂèØÁî®ÔºåË∑≥ËøáDNSÊµãËØï"
fi

# ÊµãËØïÁΩëÁªúÂª∂Ëøü
echo "   ‚è±Ô∏è  ÊµãËØïÁΩëÁªúÂª∂Ëøü..."
if command -v ping &> /dev/null; then
    ping -c 3 api.involve.asia 2>/dev/null | tail -n 1 || echo "   ‚ö†Ô∏è  pingÊµãËØïÂ§±Ë¥•"
else
    echo "   ‚ö†Ô∏è  pingÂëΩ‰ª§‰∏çÂèØÁî®ÔºåË∑≥ËøáÂª∂ËøüÊµãËØï"
fi

# 5. ÊÄßËÉΩÈ¢ÑÊúüÊïàÊûú
echo ""
echo "üìà È¢ÑÊúüÊÄßËÉΩÊîπÂñÑ:"
echo "   ‚Ä¢ Â§ñÈÉ®APIËÆøÈóÆÂª∂Ëøü: ÂáèÂ∞ë20-50ms"
echo "   ‚Ä¢ ÈÅøÂÖçVPC ConnectorÂ∏¶ÂÆΩÈôêÂà∂"
echo "   ‚Ä¢ ÂáèÂ∞ëÁΩëÁªúË∑ØÁî±Â§çÊùÇÂ∫¶"
echo "   ‚Ä¢ Èôç‰ΩéVPC ConnectorÊàêÊú¨"
echo ""

# 6. ÁîüÊàêÊìç‰ΩúÊä•Âëä
echo "üìä ÁîüÊàêÊìç‰ΩúÊä•Âëä..."

cat > vpc_connector_removal_report.md << EOF
# VPC ConnectorÁßªÈô§Êä•Âëä

## Êìç‰ΩúÊ¶ÇÂÜµ
- **È°πÁõÆID**: $PROJECT_ID
- **Âå∫Âüü**: $REGION (Êñ∞Âä†Âù°)
- **Êìç‰ΩúÊó∂Èó¥**: $(date -u +%Y-%m-%dT%H:%M:%SZ)
- **ÁõÆÊ†á**: ËÆ©Cloud RunÁõ¥Êé•Ëµ∞ÂÖ¨ÁΩëËÆøÈóÆÂ§ñÈÉ®API

## ÁßªÈô§ÂéüÂõ†

### 1. APIËÆøÈóÆÂàÜÊûê
WeeklyReporterËÆøÈóÆÁöÑÂÖ®ÈÉ®‰∏∫Â§ñÈÉ®ÂÖ¨ÂÖ±API:
- **Involve Asia API**: Â§ñÈÉ®Êï∞ÊçÆËé∑ÂèñAPI
- **È£û‰π¶ API**: Â§ñÈÉ®Êñá‰ª∂‰∏ä‰º†API  
- **SMTPÈÇÆ‰ª∂ÊúçÂä°**: Â§ñÈÉ®ÈÇÆ‰ª∂ÂèëÈÄÅÊúçÂä°

### 2. ÊÄßËÉΩ‰ºòÂåñ
- ÁßªÈô§‰∏çÂøÖË¶ÅÁöÑVPC ConnectorÂª∂Ëøü
- ÈÅøÂÖçÂ∏¶ÂÆΩÈôêÂà∂
- ÁÆÄÂåñÁΩëÁªúË∑ØÁî±
- Èôç‰ΩéÊàêÊú¨

## ‰øÆÊîπÁöÑÊúçÂä°
EOF

for SERVICE in "${SERVICES[@]}"; do
    SERVICE_URL=$(gcloud run services describe $SERVICE --region $REGION --format="value(status.url)" 2>/dev/null || echo "Ëé∑ÂèñÂ§±Ë¥•")
    VPC_STATUS=$(gcloud run services describe $SERVICE --region $REGION --format="value(spec.template.spec.template.spec.vpcAccess.connector)" 2>/dev/null || echo "")
    
    if [ -z "$VPC_STATUS" ]; then
        STATUS="‚úÖ Â∑≤ÁßªÈô§VPC Connector"
    else
        STATUS="‚ùå ‰ªçÊúâVPC Connector: $VPC_STATUS"
    fi
    
    cat >> vpc_connector_removal_report.md << EOF
- **$SERVICE**: $SERVICE_URL
  - Áä∂ÊÄÅ: $STATUS
EOF
done

cat >> vpc_connector_removal_report.md << EOF

## È™åËØÅÊñπÊ≥ï

### 1. Ê£ÄÊü•ÊúçÂä°ÈÖçÁΩÆ
\`\`\`bash
# Ê£ÄÊü•ÊúçÂä°ÊòØÂê¶ÁßªÈô§‰∫ÜVPC Connector
gcloud run services describe SERVICE_NAME --region $REGION --format="value(spec.template.spec.template.spec.vpcAccess.connector)"
# Â¶ÇÊûúËøîÂõûÁ©∫ÂÄºÔºåËØ¥ÊòéÂ∑≤ÊàêÂäüÁßªÈô§
\`\`\`

### 2. ÊÄßËÉΩÊµãËØï
\`\`\`bash
# ÊµãËØïAPIËÆøÈóÆÊÄßËÉΩ
time curl -s "https://api.involve.asia/v1/test" >/dev/null
\`\`\`

## È¢ÑÊúüÊïàÊûú
- üöÄ Â§ñÈÉ®APIËÆøÈóÆÂª∂ËøüÂáèÂ∞ë20-50ms
- üí∞ ÂáèÂ∞ëVPC ConnectorÁõ∏ÂÖ≥ÊàêÊú¨
- üîß ÁÆÄÂåñÁΩëÁªúÈÖçÁΩÆ
- üìä ÊèêÂçáÊï¥‰ΩìÊÄßËÉΩ

## Ê≥®ÊÑè‰∫ãÈ°π
- Â¶ÇÊûúÂ∞ÜÊù•ÈúÄË¶ÅËÆøÈóÆVPCÂÜÖÈÉ®ËµÑÊ∫êÔºåÂèØ‰ª•ÈáçÊñ∞ÈÖçÁΩÆVPC Connector
- ÂΩìÂâçÈÖçÁΩÆÈÄÇÂêàËÆøÈóÆÂ§ñÈÉ®APIÁöÑÂú∫ÊôØ
- Âª∫ËÆÆÂÆöÊúüÁõëÊéßAPIËÆøÈóÆÊÄßËÉΩ

EOF

echo "‚úÖ Êìç‰ΩúÊä•ÂëäÂ∑≤ÁîüÊàê: vpc_connector_removal_report.md"

# ÊÄªÁªì
echo ""
echo "üéâ VPC ConnectorÁßªÈô§ÂÆåÊàêÔºÅ"
echo "================================================"
echo "‚úÖ ÊâÄÊúâÊúçÂä°Áé∞Âú®Áõ¥Êé•ÈÄöËøáÂÖ¨ÁΩëËÆøÈóÆÂ§ñÈÉ®API"
echo "‚úÖ È¢ÑÊúüÂª∂ËøüÂáèÂ∞ë20-50ms"
echo "‚úÖ ÈÅøÂÖçVPC ConnectorÂ∏¶ÂÆΩÈôêÂà∂"
echo "‚úÖ ÁÆÄÂåñÁΩëÁªúÈÖçÁΩÆ"
echo "üìä ËØ¶ÁªÜÊä•Âëä: vpc_connector_removal_report.md"
echo ""
echo "üîó È™åËØÅÈìæÊé•:"
for SERVICE in "${SERVICES[@]}"; do
    SERVICE_URL=$(gcloud run services describe $SERVICE --region $REGION --format="value(status.url)" 2>/dev/null || echo "Ëé∑ÂèñÂ§±Ë¥•")
    echo "   - $SERVICE ÂÅ•Â∫∑Ê£ÄÊü•: $SERVICE_URL/health"
done
echo "================================================" 